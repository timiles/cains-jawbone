{"version":3,"sources":["webpack:///../src/index.js","webpack:///./utils/workerUtils.ts","webpack:///./components/QuoteFinder/QuoteFinderControl.tsx","webpack:///./components/QuoteFinder/ResourceLoader.tsx","webpack:///./components/QuoteFinder/SearchTextInputControl.tsx","webpack:///./routes/QuoteFinder/index.tsx"],"names":["getHookState","index","type","options","currentComponent","currentHook","hooks","__","__h","length","push","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","useEffect","callback","args","state","argsChanged","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","oldArgs","newArgs","some","arg","f","configureEvents","worker","onResult","onProgress","onerror","console","error","onmessage","data","event","progressPercent","result","undefined","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","hasErrored","s","findMatchingQuotesWorker","Worker","APP_BASE","QuoteFinderControl","props","jawbonePages","jawboneWords","searchWords","quotes","setQuotes","setProgressPercent","postMessage","words1","words2","sort","a","b","startCharIndex","startLineIndex","map","quote","key","endLineIndex","renderPage","endCharIndex","substring","lineIndex","renderQuote","ResourceLoader","url","onLoaded","setError","fetch","then","response","ok","text","class","SearchTextInputControl","onSubmit","searchText","setSearchText","preventDefault","placeholder","value","onBlur","currentTarget","onInput","files","file","extractWordsWorker","QuoteFinder","setJawbonePages","setJawboneWords","setSearchWords","handleJawboneTextLoaded","split"],"mappings":"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","file":"route-QuoteFinder.chunk.7eec7.esm.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","interface IMessage<T> {\r\n  data: {\r\n    event: string;\r\n    progressPercent?: number;\r\n    result?: T;\r\n  };\r\n}\r\n\r\nexport function configureEvents<T>(\r\n  worker: Worker,\r\n  onResult: (result: T | null) => void,\r\n  onProgress?: (progressPercent: number) => void\r\n) {\r\n  worker.onerror = console.error;\r\n  worker.onmessage = ({\r\n    data: { event, progressPercent, result },\r\n  }: IMessage<T>) => {\r\n    switch (event) {\r\n      case \"onProgress\": {\r\n        progressPercent !== undefined &&\r\n          onProgress &&\r\n          onProgress(progressPercent);\r\n        break;\r\n      }\r\n      case \"onResult\": {\r\n        result !== undefined && onResult(result);\r\n        break;\r\n      }\r\n      default: {\r\n        throw `Unexpected event: ${event}.`;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { h } from \"preact\";\r\nimport { useEffect, useState } from \"preact/hooks\";\r\nimport { APP_BASE } from \"../../constants\";\r\nimport { configureEvents } from \"../../utils/workerUtils\";\r\n\r\nconst findMatchingQuotesWorker = new Worker(\r\n  `${APP_BASE}/assets/workers/findMatchingQuotes.js`\r\n);\r\n\r\ninterface IQuote {\r\n  startLineIndex: number;\r\n  startCharIndex: number;\r\n  endLineIndex: number;\r\n  endCharIndex: number;\r\n}\r\n\r\ninterface IProps {\r\n  jawbonePages: string[];\r\n  jawboneWords: string[];\r\n  searchWords: string[];\r\n}\r\n\r\nconst QuoteFinderControl = (props: IProps) => {\r\n  const { jawbonePages, jawboneWords, searchWords } = props;\r\n\r\n  const [quotes, setQuotes] = useState<IQuote[] | null>();\r\n  const [progressPercent, setProgressPercent] = useState<number>();\r\n\r\n  useEffect(() => {\r\n    setQuotes(null);\r\n  }, [searchWords]);\r\n\r\n  useEffect(() => {\r\n    if (!quotes) {\r\n      configureEvents(findMatchingQuotesWorker, setQuotes, setProgressPercent);\r\n      findMatchingQuotesWorker.postMessage({\r\n        words1: jawboneWords,\r\n        words2: searchWords,\r\n      });\r\n    }\r\n  }, [quotes, jawboneWords, searchWords]);\r\n\r\n  if (!quotes) {\r\n    return (\r\n      <p>\r\n        <i>Processing... {progressPercent}%</i>\r\n      </p>\r\n    );\r\n  }\r\n\r\n  if (quotes.length === 0) {\r\n    return <p>No quotes found 😞</p>;\r\n  }\r\n\r\n  const renderPage = ({ startLineIndex, endLineIndex }: IQuote) =>\r\n    `${startLineIndex + 1}${\r\n      startLineIndex !== endLineIndex ? ` - ${endLineIndex + 1}` : \"\"\r\n    }`;\r\n\r\n  const renderQuote = ({\r\n    startLineIndex,\r\n    startCharIndex,\r\n    endLineIndex,\r\n    endCharIndex,\r\n  }: IQuote) => {\r\n    if (startLineIndex === endLineIndex) {\r\n      return jawbonePages[startLineIndex].substring(\r\n        startCharIndex,\r\n        endCharIndex\r\n      );\r\n    }\r\n    let quote = jawbonePages[startLineIndex].substring(startCharIndex);\r\n    for (\r\n      let lineIndex = startLineIndex + 1;\r\n      lineIndex < endLineIndex;\r\n      lineIndex++\r\n    ) {\r\n      quote += `\\n${jawbonePages[lineIndex]}`;\r\n    }\r\n    quote += jawbonePages[endLineIndex].substring(0, endCharIndex);\r\n    return quote;\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Page</th>\r\n          <th>Quote</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {quotes\r\n          .sort((a, b) => a.startCharIndex - b.startCharIndex)\r\n          .sort((a, b) => a.startLineIndex - b.startLineIndex)\r\n          .map((quote) => (\r\n            <tr key={`${quote.startLineIndex}_${quote.startCharIndex}`}>\r\n              <td>{renderPage(quote)}</td>\r\n              <td>{renderQuote(quote)}</td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default QuoteFinderControl;\r\n","import { h } from \"preact\";\r\nimport { useEffect, useState } from \"preact/hooks\";\r\n\r\ninterface IProps {\r\n  url: string;\r\n  onLoaded: (text: string) => void;\r\n}\r\n\r\nconst ResourceLoader = (props: IProps) => {\r\n  const { url, onLoaded } = props;\r\n\r\n  const [error, setError] = useState<string>();\r\n\r\n  useEffect(() => {\r\n    fetch(url).then((response) => {\r\n      if (response.ok) {\r\n        response.text().then((text) => {\r\n          onLoaded(text);\r\n        });\r\n      } else {\r\n        setError(\"Error loading, please try refreshing.\");\r\n      }\r\n    });\r\n  }, [url, onLoaded]);\r\n\r\n  return error ? <p class=\"error\">{error}</p> : <p>Loading...</p>;\r\n};\r\n\r\nexport default ResourceLoader;\r\n","import { h } from \"preact\";\r\nimport { useState } from \"preact/hooks\";\r\n\r\ninterface IProps {\r\n  onSubmit: (text: string) => void;\r\n}\r\n\r\nconst SearchTextInputControl = (props: IProps) => {\r\n  const { onSubmit } = props;\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const handleChangeTextArea = (\r\n    e: h.JSX.TargetedEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value } = e.currentTarget;\r\n    setSearchText(value);\r\n  };\r\n\r\n  const handleChangeFile = (e: h.JSX.TargetedEvent<HTMLInputElement>) => {\r\n    const { files } = e.currentTarget;\r\n    if (files) {\r\n      const file = files[0];\r\n      if (file) {\r\n        file.text().then(setSearchText);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: h.JSX.TargetedEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onSubmit(searchText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <fieldset>\r\n        <label>\r\n          Enter text to search for matching quotes:\r\n          <textarea\r\n            placeholder=\"Search text\"\r\n            class=\"mb-0\"\r\n            value={searchText}\r\n            onBlur={handleChangeTextArea}\r\n          />\r\n        </label>\r\n        <label class=\"label-inline\">\r\n          or import from a text file:\r\n          <input type=\"file\" class=\"ml-1\" onInput={handleChangeFile} />\r\n        </label>\r\n        <div>\r\n          <input class=\"button-primary\" type=\"submit\" value=\"Process\" />\r\n        </div>\r\n      </fieldset>\r\n      <p>\r\n        <small>\r\n          All processing happens in your browser, nothing is uploaded to the\r\n          internet.\r\n        </small>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchTextInputControl;\r\n","import { Fragment, h } from \"preact\";\r\nimport { useState } from \"preact/hooks\";\r\nimport QuoteFinderControl from \"../../components/QuoteFinder/QuoteFinderControl\";\r\nimport ResourceLoader from \"../../components/QuoteFinder/ResourceLoader\";\r\nimport SearchTextInputControl from \"../../components/QuoteFinder/SearchTextInputControl\";\r\nimport { APP_BASE } from \"../../constants\";\r\nimport { configureEvents } from \"../../utils/workerUtils\";\r\n\r\nconst extractWordsWorker = new Worker(\r\n  `${APP_BASE}/assets/workers/extractWords.js`\r\n);\r\n\r\nconst QuoteFinder = () => {\r\n  const [jawbonePages, setJawbonePages] = useState<string[]>();\r\n  const [jawboneWords, setJawboneWords] = useState<string[] | null>();\r\n  const [searchWords, setSearchWords] = useState<string[] | null>();\r\n\r\n  const handleJawboneTextLoaded = (text: string) => {\r\n    setJawbonePages(text.split(\"\\n\"));\r\n\r\n    configureEvents(extractWordsWorker, setJawboneWords);\r\n    extractWordsWorker.postMessage({ text });\r\n  };\r\n\r\n  const handleSubmitSearchText = (text: string) => {\r\n    configureEvents(extractWordsWorker, setSearchWords);\r\n    extractWordsWorker.postMessage({ text });\r\n  };\r\n\r\n  if (!jawbonePages) {\r\n    return (\r\n      <ResourceLoader\r\n        url={`${APP_BASE}/assets/cainsjawbone.txt`}\r\n        onLoaded={handleJawboneTextLoaded}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Cain’s Jawbone Quote Finder</h1>\r\n      <SearchTextInputControl onSubmit={handleSubmitSearchText} />\r\n      {jawboneWords && searchWords && (\r\n        <QuoteFinderControl\r\n          jawbonePages={jawbonePages}\r\n          jawboneWords={jawboneWords}\r\n          searchWords={searchWords}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteFinder;\r\n"],"sourceRoot":""}